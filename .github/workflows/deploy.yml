name: Deploy to Zeabur

on:
  workflow_run:
    workflows: ['Docker Build and Push']
    types:
      - completed
    branches:
      - master
  workflow_dispatch: # Allow manual trigger

# Only allow one deployment at a time
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-provision:
    name: Check if Provisioning Needed
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
      statuses: write
    outputs:
      needs_provision: ${{ steps.check.outputs.needs_provision }}
    steps:
      - name: Record start time
        id: start
        run: echo "time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Set commit status to pending
        if: github.event_name == 'workflow_run'
        uses: myrotvorets/set-commit-status-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.workflow_run.head_sha }}
          status: pending
          context: Deploy to Zeabur
          description: Deploying to Zeabur...
          targetUrl: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Install Zeabur CLI
        run: npm install -g @zeabur/cli

      - name: Authenticate with Zeabur
        env:
          ZEABUR_TOKEN: ${{ secrets.ZEABUR_TOKEN }}
        run: npx zeabur@latest auth login --token $ZEABUR_TOKEN

      - name: Set Zeabur project context
        run: npx zeabur@latest context set project --id 682fe22e75f92a6870540c4f -y

      - name: Check if service exists
        id: check
        run: |
          if npx zeabur@latest service list 2>/dev/null | grep -q "app"; then
            echo "Service 'app' exists"
            echo "needs_provision=false" >> $GITHUB_OUTPUT
          else
            echo "Service 'app' not found"
            echo "needs_provision=true" >> $GITHUB_OUTPUT
          fi

  provision:
    name: Provision Zeabur Services
    needs: check-provision
    if: needs.check-provision.outputs.needs_provision == 'true'
    uses: ./.github/workflows/provision.yml
    with:
      project_id: '682fe22e75f92a6870540c4f'
    secrets: inherit

  deploy:
    name: Deploy to Zeabur
    runs-on: ubuntu-latest
    needs: [check-provision, provision]
    if: always() && (needs.provision.result == 'success' || needs.provision.result == 'skipped')
    permissions:
      contents: read
      statuses: write

    steps:
      - name: Record start time
        id: start
        run: echo "time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Install Zeabur CLI
        run: npm install -g @zeabur/cli

      - name: Authenticate with Zeabur
        env:
          ZEABUR_TOKEN: ${{ secrets.ZEABUR_TOKEN }}
        run: npx zeabur@latest auth login --token $ZEABUR_TOKEN --debug

      - name: Set Zeabur project context
        run: npx zeabur@latest context set project --id 682fe22e75f92a6870540c4f -y

      - name: Deploy Docker Image to Zeabur
        run: npx zeabur@latest service update tag --id ${{ secrets.ZEABUR_SERVICE_ID }} -t latest -y

      - name: Calculate duration
        if: always()
        id: duration
        run: |
          end_time=$(date +%s)
          duration=$((end_time - ${{ steps.start.outputs.time }}))
          minutes=$((duration / 60))
          seconds=$((duration % 60))
          if [ $minutes -gt 0 ]; then
            echo "text=${minutes}m ${seconds}s" >> $GITHUB_OUTPUT
          else
            echo "text=${seconds}s" >> $GITHUB_OUTPUT
          fi

      - name: Deployment Summary
        if: always()
        run: |
          echo "### Deployment Summary ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Duration**: ${{ steps.duration.outputs.text }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ghcr.io/${{ github.repository }}:master-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY

      - name: Set commit status to success
        if: success() && github.event_name == 'workflow_run'
        uses: myrotvorets/set-commit-status-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.workflow_run.head_sha }}
          status: success
          context: Deploy to Zeabur
          description: Deployed in ${{ steps.duration.outputs.text }}
          targetUrl: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Set commit status to failure
        if: failure() && github.event_name == 'workflow_run'
        uses: myrotvorets/set-commit-status-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.workflow_run.head_sha }}
          status: failure
          context: Deploy to Zeabur
          description: Failed after ${{ steps.duration.outputs.text }}
          targetUrl: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Deployment failed! Check the logs above for details."
