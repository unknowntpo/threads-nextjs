version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: threads_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: threads_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - threads_network

  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: threads_migrate
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/threads_db
    depends_on:
      postgres:
        condition: service_healthy
    command: npx prisma migrate deploy
    networks:
      - threads_network
    restart: "no"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: threads_backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/threads_db
      JWT_SECRET: dev_jwt_secret_change_in_production
      NODE_ENV: development
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: pnpm run start:dev
    networks:
      - threads_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: threads_frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "5173:5173"
    command: pnpm run dev
    networks:
      - threads_network

volumes:
  postgres_data:

networks:
  threads_network:
    driver: bridge
