[project]
name = "threads-ml-service"
version = "0.1.0"
description = "ML-powered feed recommendation service for Threads"
requires-python = ">=3.11"
dependencies = [
    "asyncpg>=0.30.0",
    "fastapi>=0.119.0",
    "greenlet>=3.2.4",
    "ipykernel>=7.0.1",
    "jupyter>=1.1.1",
    "matplotlib>=3.10.7",
    "mlflow>=3.4.0",
    "numpy>=2.3.3",
    "pandas>=2.3.3",
    "polars>=1.34.0",
    "psycopg2-binary>=2.9.11",
    "pydantic>=2.12.0",
    "pydantic-settings>=2.11.0",
    "python-dotenv>=1.1.1",
    "scikit-learn>=1.7.2",
    "seaborn>=0.13.2",
    "sqlalchemy>=2.0.44",
    "uvicorn[standard]>=0.37.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.0",
]
