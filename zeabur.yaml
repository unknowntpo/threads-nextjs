# yaml-language-server: $schema=https://schema.zeabur.app/template.json
apiVersion: zeabur.com/v1
kind: Template
metadata:
  name: Threads - Next.js Social Media App

spec:
  description: A modern social media application built with Next.js 15, Prisma, PostgreSQL, and NextAuth v5
  icon: https://cdn.zeabur.com/service-icons/nextjs.svg
  tags:
    - nextjs
    - prisma
    - postgresql
    - social-media
    - nextauth
  variables: []
  readme: |
    # Threads - Social Media Application

    A modern social media platform built with Next.js 15, Prisma, PostgreSQL, and NextAuth v5.

    ## Features
    - üîê Authentication with NextAuth (Email, Google, GitHub)
    - üìù Create and share posts
    - üîÑ Real-time feed updates
    - üíæ PostgreSQL database with Prisma ORM
    - üé® Modern UI with Tailwind CSS
    - ‚úÖ Full E2E test coverage

    ## Post-Deployment Steps

    1. Configure environment variables via GitHub Actions secrets
    2. Set up OAuth providers (optional)
    3. Verify deployment and test functionality

  services:
    - name: postgres
      icon: https://cdn.zeabur.com/service-icons/postgresql.svg
      template: PREBUILT
      spec:
        source:
          image: postgres:16-alpine
        ports:
          - id: database
            port: 5432
            type: TCP
        volumes:
          - id: data
            dir: /var/lib/postgresql/data
        env:
          POSTGRES_USER:
            default: threads_user
          POSTGRES_PASSWORD:
            default: ${PASSWORD}
          POSTGRES_DB:
            default: threads_db

    - name: app
      icon: https://cdn.zeabur.com/service-icons/nextjs.svg
      template: GIT
      spec:
        source:
          source: GITHUB
          repo: GITHUB_REPO_ID
          branch: master
        ports:
          - id: web
            port: 3000
            type: HTTP
        env:
          DATABASE_URL:
            default: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres.zeabur.internal:5432/${POSTGRES_DB}
          NODE_ENV:
            default: production
